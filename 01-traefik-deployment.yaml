apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: traefik-ingress-controller

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: traefik
  labels:
    app: traefik

spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.10
          args:
            - --log.level=INFO
            - --api
            - --api.insecure
            # - --accesslog
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --entryPoints.metrics.address=:8082
            - --metrics.prometheus=true
            - --metrics.prometheus.buckets=0.100000,0.300000,1.200000,5.000000
            - --metrics.prometheus.entryPoint=metrics
            - --metrics.prometheus.addServicesLabels=true
            - --metrics.prometheus.addEntryPointsLabels=true
            # - --entrypoints.web.http.redirections.entrypoint.to=websecure
            # - --entrypoints.web.http.redirections.entrypoint.scheme=https
            - --providers.kubernetescrd
            # - --certificatesresolvers.myresolver.acme.tlschallenge
            # - --certificatesresolvers.myresolver.acme.email=foo@you.com
            # - --certificatesresolvers.myresolver.acme.storage=acme.json
            # Please note that this is the staging Let's Encrypt server.
            # Once you get things working, you should remove that whole line altogether.
            # - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
          ports:
            - name: web
              containerPort: 80
              # hostPort: 80
            - name: websecure
              containerPort: 443
              # hostPort: 443
            - name: admin
              containerPort: 8080
              # hostPort: 8080
            - name: metrics
              containerPort: 8082
              # hostPort: 8082
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 100Mi
